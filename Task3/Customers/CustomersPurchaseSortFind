/**
 *
 *  @author Pawlaszek Grzegorz S17651
 *
 */

package zad2;

import java.io.File;
import java.io.FileNotFoundException;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;
import java.util.stream.Collectors;

public class CustomersPurchaseSortFind {

	private List<Purchase> lista;

	public CustomersPurchaseSortFind() {
		lista = new ArrayList<Purchase>();
	}

	public void readFile(String fname) {
		Scanner scanner = null;
		try {
			File file = new File(fname);
			scanner = new Scanner(file, "utf-8");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		String[] line = null;
		while (scanner.hasNext()) {
			line = scanner.nextLine().split(";");
			lista.add(new Purchase(line));
		}
		scanner.close();
	}

	public void showSortedBy(String string) {
		List<Purchase> result = new ArrayList<Purchase>(this.lista);
		System.out.println(string);
		switch (string) {
		case "Nazwiska":
			Collections.sort(result, (e1, e2) -> {
				return e1.getId().compareTo(e2.getId());
			});
			Collator cl = Collator.getInstance(new Locale("pl"));
			Collections.sort(result, (p1,p2) -> {return cl.compare(p1.getNazwisko(), p2.getNazwisko());});
			for (Purchase p : result)
				System.out.println(p);
			break;
		case "Koszty":
			Collections.sort(result, (e1, e2) -> {
				return e2.getId().compareTo(e1.getId());
			});
			result.sort(Comparator.comparing(Purchase::getKoszt));
			Collections.reverse(result);
			for (Purchase p : result)
				System.out.println(p + " (koszt: " + p.getKoszt() + ")");
			break;
		default:
			System.out.println("Wrong argument in showSortedBy()");
		}
		System.out.println();
	}

	public void showPurchaseFor(String id) {
		List<Purchase> result = new ArrayList<Purchase>(this.lista);
		result = this.lista.stream().filter(e -> e.getId().equals(id)).collect(Collectors.toList());
		if (result.size() != 0) {
			System.out.println("Klient " + id);
			for (Purchase p : result)
				System.out.println(p);
			System.out.println();
		}
	}

}
